openapi: 3.0.2
info:
  version: 1.0.0
  title: Cloud Connection Configuration
  contact:
    url: 'http://zebra.com/support'
  x-logo:
    url: ./Zebra_Logo_K.png
  description: |
    # Your description here
paths:
  /cloud/version:
    parameters: []
    get:
      summary: Retrieves reader component version information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/readerversion.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Device Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: get_version
      description: 'Retrieves reader component version information including Boot Loader, OS, Reader Application, and Radio Firmware versions'
      tags:
        - Management
  /cloud/network:
    parameters: []
    get:
      summary: Retrieves reader network configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/readernetwork.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: get_network
      description: 'Retrieves reader network information including IP address, subnet mask, gateway and DNS'
      tags:
        - Management
    put:
      summary: Updates reader network configuration
      operationId: set_network
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
      description: Updates the reader network configuration settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/networkconfig.v1.yaml
        description: ''
      tags:
        - Management
  /cloud/status:
    parameters: []
    get:
      summary: Retrieves reader operational statistics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: ./components/schemas/readerstats.v1.yaml
                  - $ref: ./components/schemas/readerupgradestatus.v1.yaml
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: ./components/schemas/readerupgradestatus.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: get_status
      description: Retrieves reader operational statistics for read points
      tags:
        - Management
  /cloud/reboot:
    parameters: []
    put:
      summary: Restarts reader
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: A URL that will provide a status of the restart
              schema:
                type: string
                example: 'https://mock-api.zebra.com/v2/rfid-read-to-cloud/status'
          content:
            text/html:
              schema:
                type: string
                default: Reboot Pending
                description: Restart Pending
                example: Reboot Pending
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: reboot
      description: Restarts the reader with the device ID provided
      tags:
        - Management
  /cloud/gpo:
    put:
      summary: Updates GPO port state
      operationId: set_gpo
      description: Updates the GPO state on the specified port of the reader
      parameters:
        - in: query
          name: port
          description: The GPO port ID
          required: true
          schema:
            type: integer
        - in: query
          name: state
          description: The GPO state signal to send
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      tags:
        - Management
    parameters: []
  /cloud/app-led:
    put:
      summary: Updates application LED state
      operationId: set_appled
      description: Updates the application LED state on the reader to the state specified
      parameters:
        - in: query
          name: color
          description: 'The color of the LED (red, amber, green)'
          required: true
          schema:
            type: string
            enum:
              - red
              - amber
              - green
        - in: query
          name: seconds
          description: The duration in seconds for the LED state to be in effect
          required: true
          schema:
            type: integer
        - in: query
          name: flash
          description: A value indicating whether to flash the LED
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      tags:
        - Management
    parameters: []
    get:
      summary: Retrieves application LED state
      operationId: get_appled
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                enum:
                  - DEFAULT
                  - NON_DEFAULT
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      description: Retrieves a value indicating the current state of the application LED
      tags:
        - Management
  /cloud/region:
    parameters: []
    get:
      summary: Retrieves reader region information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/regionconfig.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: get_region
      description: Retrieves reader region (country) information
      tags:
        - Management
  /cloud/start:
    parameters: []
    put:
      summary: Starts reading tags
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: start
      description: Starts the reader reading tags
      tags:
        - Control
  /cloud/stop:
    parameters: []
    put:
      summary: Stops reading tags
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: stop
      description: Stops the reader reading tags
      tags:
        - Control
  /cloud/mode:
    get:
      summary: Retrieves operating mode
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/modes/operatingMode.v1.yaml
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: get_mode
      description: Retrieves current operating mode
      tags:
        - Control
    put:
      summary: Updates identification mode
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: set_mode
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/modes/operatingMode.v1.yaml
        description: The new identification mode
      description: "Changes the reader's operating mode"
      tags:
        - Control
    parameters: []
  /cloud/os:
    parameters: []
    put:
      summary: Updates software on device
      operationId: set_os
      description: Update the OS software on the device
      tags:
        - Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/os_update.v1.yaml
      responses:
        '200':
          description: OK
  /cloud/config:
    parameters: []
    put:
      summary: Updates reader configuration
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: set_config
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                xml:
                  type: string
                  description: The current reader configuration XML string
        description: The new reader configuration XML file
      description: Updates the reader configuration
      tags:
        - Management
    get:
      summary: Retrieves reader configuration
      operationId: get_config
      description: Retrieves reader configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  xml:
                    type: string
                    description: The current reader configuration XML string
      tags:
        - Management
  /cloud/logs:
    get:
      summary: Log Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./components/schemas/logLevel.v1.json
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: get_logs
      description: Retrieves reader log configuration
      tags:
        - Management
    put:
      summary: Configures the logs
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: set_logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/logLevel.v1.json
        description: The log level to configure
      description: Changes logging level
      tags:
        - Management
    parameters: []
  '/cloud/logs/{logType}':
    parameters:
      - schema:
          type: string
          enum:
            - syslog
            - radioPacketLog
        name: logType
        in: path
        required: true
        description: Type of Log to Retrieve
    get:
      summary: Retrieve Log
      responses:
        '200':
          description: OK
          content:
            application/gzip:
              schema:
                description: Reader Logs Retrieved
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      operationId: get_logs_syslog
      tags:
        - Management
      description: Retrieves a reader log
    delete:
      summary: Purge Log
      operationId: del_logs_syslog
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ./components/schemas/error.v1.yaml
      description: Purges a particular log
      tags:
        - Management
tags:
  - name: operating_mode
    x-displayName: Configuration for the Operating Modes
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/operatingModes" />
x-tagGroups:
  - name: Management
    tags:
      - Management
  - name: Control
    tags: 
      - Control
  - name: Models
    tags:
      - operating_mode
components:
  schemas:
    operatingModes:
      $ref: ./components/schemas/modes/operatingMode.v1.yaml
