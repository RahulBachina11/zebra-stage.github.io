openapi: 3.0.0
info:
  title: FX Reader Management
  version: '2.0'
  description: Management and integration of Zebra RFID readers in the cloud
tags:
  - name: Control
    description: Control Radio Operation
  - name: Management
    description: Manage Reader
paths:
  '/{deviceId}/version':
    parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
        description: The device ID of the reader
    get:
      summary: Retrieves reader component version information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: readerVersion
                type: object
                description: Reader version information
                properties:
                  deviceId:
                    type: string
                    example: RFIDF0F4B5
                    description: The Savanna device id for the reader
                  readerApplication:
                    type: string
                    description: Reader software version
                    example: 2.7.19.0
                  radioApi:
                    type: string
                    description: API to the radio engine
                    example: 2.2.8.2
                  radioFirmware:
                    type: string
                    description: Firmware running on the radio
                    example: 2.1.14.0
                  radioControlApplication:
                    type: string
                    description: Reader radio control version
                    example: 1.0.0
                  readerOS:
                    type: string
                    description: Reader operating system version
                    example: 2.2.15.0
                  readerHardware:
                    type: string
                    description: Hardware version of the reader
                    example: 0.0.5.0
                  readerBootLoader:
                    type: string
                    description: Reader boot loader version
                    example: 2.1.2.0
                  readerFileSystem:
                    type: string
                    description: Reader root file system version
                    example: 2.1.2.0
                  cloudAgentApplication:
                    type: string
                    description: Reader cloud agent version
                    example: 1.0.0
                  availableOsUpgrades:
                    type: array
                    description: 'A List of available OS upgrades, (upgrade path only, no downgrade versions)'
                    example: '[ 3.1.12, 3.0.35 ]'
                    items:
                      title: osVersions
                      type: object
                      properties:
                        version:
                          type: string
                          example: 3.1.12
                        releaseDate:
                          type: string
                          format: date
                          example: '2020-04-23'
                        releaseNotesUrl:
                          type: string
                          format: uri
                          example: 'https://www.zebra.com/content/dam/zebra_new_ia/en-us/software/operating-system/fx7500-series-operating-system/FXSeries_3_1_12_Release_Notes.pdf'
                  fpga:
                    type: string
                    example: 1.8.0.0
                    description: FPGA running on radio (only applicable to ATR7000)
                required:
                  - readerApplication
                  - radioApi
                  - radioFirmware
                  - readerOS
                  - readerHardware
                  - readerBootLoader
                  - readerFileSystem
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Device Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Retrieve Reader Version
      description: 'Retrieves reader component version information including Boot Loader, OS, Reader Application, and Radio Firmware versions'
      tags:
        - Management
  '/{deviceId}/network':
    parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
        description: The device ID of the reader
    get:
      summary: Retrieves reader network configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: readerNetwork
                type: object
                properties:
                  deviceId:
                    type: string
                    example: RFIDF0F4B5
                    description: The Savanna device id for the reader
                  hostName:
                    type: string
                    description: Host name of the reader
                    example: FX9600F0F4B5
                  ipAddress:
                    type: string
                    description: IP address of the reader
                    example: 192.168.1.10
                  gatewayAddress:
                    type: string
                    description: IP address of the gateway
                    example: 192.168.1.1
                  subnetMask:
                    type: string
                    description: Subnet mask for the network adapter
                    example: 255.255.255.0
                  dnsAddress:
                    type: string
                    description: IP address of the DNS server
                    example: 8.8.8.8
                  dhcp:
                    type: boolean
                    description: A value indicating DHCP configuration
                    example: 'true'
                  macAddress:
                    type: string
                    description: MAC address of the reader
                    example: '84:24:8D:F0:F4:B5'
                required:
                  - hostName
                  - ipAddress
                  - macAddress
                  - gatewayAddress
                  - subnetMask
                  - dnsAddress
                  - dhcp
                description: Reader network information
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Retrieve Reader Network
      description: 'Retrieves reader network information including IP address, subnet mask, gateway and DNS'
      tags:
        - Management
    put:
      summary: Updates reader network configuration
      operationId: Update Reader Network
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
      description: Updates the reader network configuration settings
      requestBody:
        content:
          application/json:
            schema:
              title: networkConfig
              type: object
              description: Represents reader communication configuration parameters.
              properties:
                macAddress:
                  type: string
                  description: MAC address of the reader (read only)
                  example: '84:24:8D:F0:F4:B5'
                dhcp:
                  type: boolean
                  description: A value indicating DHCP configuration
                  example: 'true'
                dnsAddress:
                  type: string
                  description: IP address of the DNS server
                  example: 8.8.8.8
                subnetMask:
                  type: string
                  description: Subnet mask for the network adapter
                  example: 255.255.255.0
                gatewayAddress:
                  type: string
                  description: IP address of the gateway
                  example: 192.168.1.1
                ipAddress:
                  type: string
                  description: IP address of the reader (read only if dhcp = true)
                  example: 192.168.1.10
                hostName:
                  type: string
                  description: Host name of the reader
                  example: FX9600F0F4B5
              required:
                - macAddress
                - dhcp
                - dnsAddress
                - subnetMask
                - gatewayAddress
                - ipAddress
                - hostName
        description: ''
      tags:
        - Management
  '/{deviceId}/status':
    parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
        description: The device ID of the reader
    get:
      summary: Retrieves reader operational statistics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: readerStats
                type: object
                description: Reader statistics information
                properties:
                  deviceId:
                    type: string
                    example: RFIDF0F4B5
                    description: The Savanna device id for the reader
                  uptime:
                    type: string
                    description: Duration the reader has been powered on
                    format: time
                    example: '26 days 01:11:17'
                  systemTime:
                    type: string
                    description: ISO 8601 formatted time on the reader
                    format: date-time
                    example: '2020-01-08T15:36:53+00:00'
                  ram:
                    title: memoryStats
                    type: object
                    properties:
                      total:
                        type: integer
                        description: Total RAM in bytes
                        example: '26098076'
                      free:
                        type: integer
                        description: Free RAM in bytes
                        example: '195612672'
                      used:
                        type: integer
                        description: Used RAM in bytes
                        example: '65368064'
                    description: System memory statistics
                  flash:
                    title: readerFlashMemory
                    type: object
                    description: Non-volatile reader flash partitions and their usage information
                    properties:
                      deviceId:
                        type: string
                        example: RFIDF0F4B5
                        description: The Savanna device id for the reader
                      rootFileSystem:
                        $ref: '#/paths/~1%7BdeviceId%7D~1status/get/responses/200/content/application~1json/schema/properties/ram'
                      platform:
                        $ref: '#/paths/~1%7BdeviceId%7D~1status/get/responses/200/content/application~1json/schema/properties/ram'
                      readerConfig:
                        $ref: '#/paths/~1%7BdeviceId%7D~1status/get/responses/200/content/application~1json/schema/properties/ram'
                      readerData:
                        $ref: '#/paths/~1%7BdeviceId%7D~1status/get/responses/200/content/application~1json/schema/properties/ram'
                    required:
                      - rootFileSystem
                      - platform
                      - readerConfig
                      - readerData
                  cpu:
                    title: cpuStats
                    type: object
                    properties:
                      user:
                        type: integer
                        description: User processes CPU utilization percentage
                        example: '42'
                      system:
                        type: integer
                        description: System processes CPU utilization percentage
                        example: '32'
                    description: System CPU Statistics
                  radioConnection:
                    type: string
                    enum:
                      - connected
                      - disconnected
                    description: The status of the radio connection
                    example: connected
                  antennas:
                    type: object
                    description: Status of the antennas connection
                    properties:
                      '0':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 0 connection state (only applicable to ATR7000)
                      '1':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 1 connection state
                      '2':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 2 connection state
                      '3':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 3 connection state
                      '4':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 4 connection state
                      '5':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 5 connection state
                      '6':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 6 connection state
                      '7':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 7 connection state
                      '8':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 8 connection state
                      '9':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 9 connection state (only applicable to ATR7000)
                      '10':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 10 connection state (only applicable to ATR7000)
                      '11':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 11 connection state (only applicable to ATR7000)
                      '12':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 12 connection state (only applicable to ATR7000)
                      '13':
                        type: string
                        enum:
                          - connected
                          - disconnected
                        description: Antenna 13 connection state (only applicable to ATR7000)
                    required:
                      - '1'
                      - '2'
                  temperature:
                    type: integer
                    description: Current Reader Temperature (in degrees centigrade)
                    format: int32
                    example: 31
                  radioActivitiy:
                    type: string
                    description: Status of the radio activity
                    enum:
                      - active
                      - inactive
                  powerSource:
                    type: string
                    enum:
                      - DC
                      - POE
                      - POE+
                    description: The source of power for the reader
                  powerNegotiation:
                    type: string
                    description: |-
                      How the power supplied to the reader is negotiated
                      Only present if powerSource is POE or POE+
                    enum:
                      - disabled
                      - in_progress
                      - success
                      - failure
                      - not_applicable
                  ntp:
                    oneOf:
                      - title: ntpstats
                        type: object
                        description: Represents NTP statistics.
                        properties:
                          offset:
                            type: number
                            description: Local clock offset from NTP server clock in milliseconds.
                            example: 120
                            format: float
                          reach:
                            type: integer
                            description: Status of successful synchronization attempts; a value of 377 indcates eight consecutive successful attempts.
                            example: 377
                        required:
                          - offset
                          - reach
                      - type: string
                required:
                  - deviceId
                  - uptime
                  - systemTime
                  - ram
                  - flash
                  - cpu
                  - radioConnection
                  - temperature
                  - radioActivitiy
                  - powerSource
                  - powerNegotiation
                  - ntp
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                title: readerUpgradeStatus
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - upgrading-os
                      - updating-applications
                      - updating-root-partition
                      - updating-radio
                      - rebooting
                  imageDownloadProgress:
                    type: number
                    minimum: 0
                    maximum: 1
                    description: Upgrade imaged download percentage
                  overallUpdaateProgress:
                    type: number
                    minimum: 0
                    maximum: 1
                    description: Upgrade imaged download percentage
                  updateProgressDetail:
                    type: object
                    properties:
                      os:
                        type: number
                        minimum: 0
                        maximum: 1
                        description: OS upgrade progress percentage
                      rootFileSystem:
                        type: number
                        minimum: 0
                        maximum: 1
                        description: Root file system upgrade progress percentage
                      applications:
                        type: number
                        minimum: 0
                        maximum: 1
                        description: Applications upgrade progress percentage
                      radioFirmware:
                        type: number
                        minimum: 0
                        maximum: 1
                        description: Radio firmware upgrade progress percentage
                      platform:
                        type: number
                        minimum: 0
                        maximum: 1
                        description: Platform upgrade progress percentage
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Retrieve Reader Statistics
      description: Retrieves reader operational statistics for read points
      tags:
        - Management
  '/{deviceId}/reboot':
    parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
        description: The device ID of the reader
    put:
      summary: Restarts reader
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: A URL that will provide a status of the restart
              schema:
                type: string
                example: 'https://mock-api.zebra.com/v2/rfid-read-to-cloud/status'
          content:
            text/html:
              schema:
                type: string
                default: Reboot Pending
                description: Restart Pending
                example: Reboot Pending
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Restart Reader
      description: Restarts the reader with the device ID provided
      tags:
        - Management
  '/{deviceId}/gpo':
    put:
      summary: Updates GPO port state
      operationId: Update GPO State
      description: Updates the GPO state on the specified port of the reader
      parameters:
        - in: query
          name: port
          description: The GPO port ID
          required: true
          schema:
            type: integer
        - in: query
          name: state
          description: The GPO state signal to send
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: error
                type: object
                properties:
                  code:
                    type: integer
                    description: The error code
                    example: 123
                  message:
                    type: string
                    description: A brief description of the error
                    example: internal system error.
                  parameters:
                    type: array
                    description: 'A list of error parameters, if applicable'
                    items:
                      type: string
                required:
                  - code
                  - message
                description: Represents an API error.
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      tags:
        - Management
    parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
        description: The device ID of the reader
  '/{deviceId}/app-led':
    put:
      summary: Updates application LED state
      operationId: Update Application LED
      description: Updates the application LED state on the reader to the state specified
      parameters:
        - in: query
          name: color
          description: 'The color of the LED (red, amber, green)'
          required: true
          schema:
            type: string
            enum:
              - red
              - amber
              - green
        - in: query
          name: seconds
          description: The duration in seconds for the LED state to be in effect
          required: true
          schema:
            type: integer
        - in: query
          name: flash
          description: A value indicating whether to flash the LED
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      tags:
        - Management
    parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
        description: The device ID of the reader
    get:
      summary: Retrieves application LED state
      operationId: Retrieve Application LED State
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                enum:
                  - DEFAULT
                  - NON_DEFAULT
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      description: Retrieves a value indicating the current state of the application LED
      tags:
        - Management
  '/{deviceId}/region':
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
        description: The device ID of the reader
    get:
      summary: Retrieves reader region information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: regionConfig
                type: object
                properties:
                  region:
                    type: string
                    default: UNDEFINED
                    description: The RF region of operation
                    example: US
                  regulatoryStandard:
                    type: string
                    default: UNDEFINED
                    description: The RF regulatory standard followed
                    example: FCC
                  lbtEnabled:
                    type: boolean
                    default: false
                    description: A flag indicating whether listen before talk is enabled
                    example: 'false'
                  channelData:
                    type: array
                    description: The list of channels enabled
                    example: '{915250,915750,903250,926750,926250,904250,927250,920250,919250,909250,918750,917750,905250,904750,925250,921750,914750,906750,913750,922250,911250,911750,903750,908750,905750,912250,906250,917250,914250,907250,918250,916250,910250,910750,907750,924750,909750,919750,916750,913250,923750,908250,925750,912750,924250,921250,920750,922750,902750,923250}'
                    items:
                      type: number
                required:
                  - region
                  - lbtEnabled
                description: Represents the region and regulatory configuration.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Retrieve Reader Region
      description: Retrieves reader region (country) information
      tags:
        - Management
  '/{deviceId}/start':
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
    put:
      summary: Starts reading tags
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Start Reader
      description: Starts the reader reading tags
      tags:
        - Control
  '/{deviceId}/stop':
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
    put:
      summary: Stops reading tags
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Stop Reader
      description: Stops the reader reading tags
      tags:
        - Control
  '/{deviceId}/mode':
    get:
      summary: Retrieves operating mode
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1mode/put/requestBody/content/application~1json/schema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Retrieve Current Operating Mode
      description: Retrieves current operating mode
      tags:
        - Control
    put:
      summary: Updates identification mode
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Update Operating Mode
      requestBody:
        content:
          application/json:
            schema:
              title: operatingMode
              type: object
              description: Represents the reader operating mode.
              properties:
                type:
                  type: string
                  enum:
                    - SIMPLE
                    - INVENTORY
                    - PORTAL
                    - CONVEYOR
                    - CUSTOM
                  description: 'The type of mode of operation '
                  default: SIMPLE
                modeSpecificSettings:
                  oneOf:
                    - title: inventorySettings
                      type: object
                      description: Reader settings for inventory mode.
                      properties:
                        interval:
                          type: object
                          description: The time interval (how often) to perform inventory
                          properties:
                            unit:
                              type: string
                              enum:
                                - seconds
                                - minutes
                                - hours
                                - days
                            value:
                              type: integer
                    - title: portalSettings
                      type: object
                      description: Reader settings for portal mode.
                      properties:
                        startTrigger:
                          type: object
                          description: The GPI trigger to start reads on the portal
                          properties:
                            port:
                              type: integer
                              description: The GPI port to signal
                            signal:
                              type: string
                              enum:
                                - HIGH
                                - LOW
                              description: The signal value for the trigger
                        stopInterval:
                          type: integer
                          description: The interval at which to stop reads after the last known tag is read (seconds)
                antennas:
                  type: array
                  items:
                    type: integer
                filter:
                  title: tagIdFilter
                  type: object
                  description: Represents filter on the tag id.
                  properties:
                    value:
                      type: string
                      example: '[a-zA-Z0-9]{2,}'
                      description: The value to match.
                    match:
                      type: string
                      description: The segment or method of the id to match.
                      enum:
                        - prefix
                        - suffix
                        - regex
                      example: regex
                    operation:
                      type: string
                      default: include
                      enum:
                        - include
                        - exclude
                      example: include
                      description: The filter operation (include/exclude).
                  required:
                    - value
                    - match
                    - operation
                transmitPower:
                  oneOf:
                    - type: integer
                      description: Single value applies to all antennas
                    - type: array
                      description: |-
                        Each value applies to each antenna in the antennas array
                        Array length must match antennas array length
                      items:
                        type: integer
                  description: Desired Transmit Power (in dbm)
                linkProfile:
                  oneOf:
                    - type:
                        - integer
                        - string
                      description: Single value applies to all antennas
                    - type: array
                      description: |-
                        Each value applies to each antenna in the antennas array
                        Array length must match antennas array length
                      items:
                        type:
                          - integer
                          - string
                  description: Link Profile (communication channel between tag and reader)
                antennaStopCondition:
                  oneOf:
                    - title: antennaStopConditions
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - DURATION
                            - INVENTORY_COUNT
                            - GPI
                            - SINGLE_INVENTORY_LIMITED_DURATION
                          description: Type of Stop Condition
                        value:
                          oneOf:
                            - type: number
                            - $ref: '#/paths/~1%7BdeviceId%7D~1mode/put/requestBody/content/application~1json/schema/properties/radioStopConditions/properties/gpis/items'
                          description: Value dependent on type
                      required:
                        - type
                        - value
                    - type: array
                      description: |-
                        Each value applies to each antenna in the antennas array
                        Array length must match antennas array length
                      items:
                        $ref: '#/paths/~1%7BdeviceId%7D~1mode/put/requestBody/content/application~1json/schema/properties/antennaStopCondition/oneOf/0'
                  description: Stop Condition for antennas
                query:
                  oneOf:
                    - title: query
                      type: object
                      properties:
                        tagPopulation:
                          type: integer
                          minimum: 0
                          description: 'Expected number of tags '
                        sel:
                          type: string
                          enum:
                            - ALL
                            - SL
                            - NOT_SL
                          description: Sel field (see EPC Gen2 Spec)
                        session:
                          type: string
                          description: Session Field (see EPC Gen2 Spec)
                          enum:
                            - S0
                            - S1
                            - S2
                            - S3
                        target:
                          type: string
                          description: Target Field (see EPC Gen2 Spec)
                          enum:
                            - A
                            - B
                            - AB
                    - type: array
                      description: |-
                        Each value applies to each antenna in the antennas array
                        Array length must match antennas array length
                      items:
                        $ref: '#/paths/~1%7BdeviceId%7D~1mode/put/requestBody/content/application~1json/schema/properties/query/oneOf/0'
                tagMetaData:
                  title: tagMetaData
                  type: array
                  description: "Controls when and how often a tag is reported\n\n  “ANTENNA” will report the antenna port upon which the tag was inventoried.\n\n  “RSSI” will report the rssi (in dbm) of the inventoried tag. If the tag is only reported occasionally (see reportFilter), this tag will be the peak rssi since the last reported read. \n  \n  \"PHASE” will report the phase (in degrees) of the inventoried tag. This value will only be reported if each individual tag read is reported (in other words, if reportFilter duration is set to 0). Otherwise, it will not be reported.\n  \n  \"CHANNEL” will report the channel (in MHz) the reader was using when the tag was inventoried. This value will only be reported if each individual tag read is reported (in other words, if reportFilter duration is set to 0). Otherwise, it will not be reported.\n  \n  “SEEN_COUNT” will report the number of times the tag has been inventoried since the previous report. This value will always be 1 if each individual tag read is reported (in other words, if reportFilter duration is set to 0). \n  \n  \"PC\" will report the PC bits of the inventoried tag as a hex string. \n  \n  \"XPC\" will report the XPC bits of the inventoried tag, if present, as a hex string. \n  \n  \"CRC\" will report the CRC bits of the inventoried tag as a hex string. \n\n\nBy default,\n“SIMPLE” mode does not report any additional meta data, “PORTAL” and “CONVEYOR” modes reports “ANTENNA”, and “INVENTORY” mode reports “ANTENNA”, “RSSI”, and “SEEN_COUNT”.\n"
                  x-examples:
                    example-1:
                      - PC
                      - ANTENNA
                      - RSSI
                  items:
                    type: string
                    enum:
                      - RSSI
                      - PHASE
                      - SEEN_COUNT
                      - ANTENNA
                      - CHANNEL
                      - PC
                      - XPC
                      - CRC
                radioStartConditions:
                  title: radioStartConditions
                  type: object
                  description: "Controls when, after a “start” is issued, the radio starts trying to inventory tags. \n\nIf this element is absent, the radio will immediately begin inventorying tags upon a \"start\" command. "
                  properties:
                    type:
                      type: string
                      enum:
                        - GPI
                        - GPI_WITH_RESTART
                    gpis:
                      type: array
                      description: ''
                      items:
                        $ref: '#/paths/~1%7BdeviceId%7D~1mode/put/requestBody/content/application~1json/schema/properties/radioStopConditions/properties/gpis/items'
                radioStopConditions:
                  title: radioStopConditions
                  type: object
                  description: "Controls when an ongoing operation completes. \n\nIf this element is absent (or empty), the radio will continue trying to inventory tags until a \"stop\" is issued."
                  properties:
                    duration:
                      type: integer
                      description: Time to run until radio stops (in seconds)
                      format: int32
                    antennaCycles:
                      type: integer
                      description: The number of cycles through all enabled antennas before stopping the radio
                      format: int32
                    tagCount:
                      type: integer
                      description: The number of tags to inventory until the radio stops. Cannot be set at the same time as durationAfterNoMoreUniqueTags
                      format: int32
                    durationAfterNoMoreUniqueTags:
                      type: integer
                      description: Duration (in seconds) after not inventorying any more unique tags to stop the radio. Cannot be set at the same time as tagCount
                      format: int32
                    gpis:
                      type: array
                      items:
                        title: gpi
                        type: object
                        properties:
                          port:
                            type: integer
                            minimum: 1
                            maximum: 2
                            description: GPI Port Number
                          signal:
                            type: string
                            enum:
                              - HIGH
                              - LOW
                            description: Transition to this GPI will trigger event
                          debounceTime:
                            type: integer
                            description: Time (in milliseconds) until GPI must remain at signal level to trigger event
                            default: 0
                        required:
                          - port
                          - signal
                reportFilter:
                  title: reportFilter
                  type: object
                  description: |-
                    Controls when and how often a tag is reported

                    NOTE: This cannot be set while in "INVENTORY" mode. Setting the modeSpecificSetting for interval must be used in "INVENTORY" mode.
                  properties:
                    duration:
                      type: integer
                      description: "Duration (in seconds) to wait to report a tag again once it has already been reported\nIt should be noted that the way the filter works is that as long as the tag is being read by the reader, it will not report unless the time since the previous report of this tag on this antenna meets the type and duration. "
                      format: int32
                    type:
                      type: string
                      enum:
                        - RADIO_WIDE
                        - PER_ANTENNA
                      description: "Configures the timeout (in seconds) by antenna or for entire radio \n"
                  required:
                    - duration
                    - type
                  x-examples:
                    'Report Unique Tags for Radio ("SIMPLE" Mode Default)':
                      type: RADIO_WIDE
                      value: 4294967295
                    'Report Unique Tags for each antenna ("PORTAL" and "CONVEYOR" Modes Defaults)':
                      type: PER_ANTENNA
                      value: 4294967295
                    'Report tags once every minute (equivalent to the default configuartion for "INVENTORY" Mode)':
                      type: PER_ANTENNA
                      value: 60
                rssiFilter:
                  title: rssiFilter
                  type: object
                  description: |-
                    Tag with RSSI below threshold will not be inventoried by the radio
                    Note: Currently ONLY supported by the FX9600
                  x-examples: {}
                  properties:
                    threshold:
                      type: integer
                      description: Threshold (in dbm) below which the radio will ignore a tag response
                      format: int32
                      minimum: -128
                      maximum: -20
              required:
                - type
        description: The new identification mode
      description: "Changes the reader's operating mode"
      tags:
        - Control
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
  '/{deviceId}/os':
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
    put:
      summary: Updates software on device
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                example: 'https://mock-api.zebra.com/v2/rfid-read-to-cloud/status'
              description: A URL that provides a status on the update
              required: true
      operationId: Update OS Version
      requestBody:
        content:
          application/gzip:
            schema:
              type: string
              format: uri
              example: 'https://www.zebra.com/apps/dlmanager?dlp=-227178c9720c025483893483886ea540bd07dd0f9873752cf891686eb495040ba85f97bf163f9fd12080ee1978f57c98463270ae549b1b5c65e6acbef65100a1978a205f64aae7c7ef1d957c10a43f885d113b42e079e0119302a877e3ec811c409967895fc977bd97b1c080e9d4771&c=us&l=en'
        description: A link to the OS software update package .zip file
      description: Update the OS software on the device
      tags:
        - Management
  '/{deviceId}/config':
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
    put:
      summary: Updates reader configuration
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Update Configuration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                xml:
                  type: string
                  description: The current reader configuration XML string
        description: The new reader configuration XML file
      description: Updates the reader configuration
      tags:
        - Management
    get:
      summary: Retrieves reader configuration
      operationId: Retrieve Configuration
      description: Retrieves reader configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  xml:
                    type: string
                    description: The current reader configuration XML string
      tags:
        - Management
  '/{deviceId}/logs':
    get:
      summary: Log Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1logs/put/requestBody/content/application~1json/schema'
          headers: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Retrieve Log Configuration
      description: Retrieves reader log configuration
      tags:
        - Management
    put:
      summary: Configures the logs
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                description: Command Successful
                type: string
                default: Command Successful
                example: Command Successful
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Configures the Logs
      requestBody:
        content:
          application/json:
            schema:
              title: logLevel
              type: object
              description: Reader Logging Configuration
              properties:
                radioPacketLog:
                  type: boolean
                  description: Enables or Disables the Radio Control radio packet log
                components:
                  type: array
                  description: System sub-components
                  items:
                    type: object
                    properties:
                      componentName:
                        type: string
                        enum:
                          - radio_control
                          - cloud_agent
                        description: Name of subcomponent
                      level:
                        type: string
                        enum:
                          - DEBUG
                          - INFO
                          - WARNING
                          - ERROR
                          - FATAL
                          - 'OFF'
                        description: Logging Level
                    required:
                      - componentName
                      - level
        description: The log level to configure
      description: Changes logging level
      tags:
        - Management
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
  '/{deviceId}/logs/{logType}':
    parameters:
      - schema:
          type: string
        name: deviceId
        in: path
        required: true
      - schema:
          type: string
          enum:
            - syslog
            - radioPacketLog
        name: logType
        in: path
        required: true
        description: Type of Log to Retrieve
    get:
      summary: Retrieve Log
      responses:
        '200':
          description: OK
          content:
            application/gzip:
              schema:
                description: Reader Logs Retrieved
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      operationId: Retrieves a particular log
      tags:
        - Management
    delete:
      summary: Purge Log
      operationId: Purge a particular log
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1%7BdeviceId%7D~1gpo/put/responses/400/content/application~1json/schema'
      description: Purges a particular log
      tags:
        - Management
servers:
  - url: 'https://api.zebra.com/v2/devices/readers'
    description: ''
  - url: 'https://test-api1.zebra.com/v2/devices/readers'
    description: ''
  - url: 'https://stage-api.zebra.com/v2/devices/readers'
    description: ''
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Access token
security:
  - bearerAuth: []
